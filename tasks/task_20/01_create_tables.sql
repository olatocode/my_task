-- 1) Authors
CREATE TABLE authors (
    authorid INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    authorname VARCHAR(200) NOT NULL,
    countryoforigin VARCHAR(100),
    numberofbookswritten INTEGER NOT NULL DEFAULT 0 CHECK (numberofbookswritten >= 0)
);

-- 2) Departments
CREATE TABLE departments (
    deptid INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nameofdepartment VARCHAR(150) NOT NULL,
    nameofmanager VARCHAR(150) circular FK
);

-- 3) Members
CREATE TABLE members (
    memberid INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(150) NOT NULL,
    gender VARCHAR(30),
    emailaddress VARCHAR(255) NOT NULL UNIQUE,
    phonenumber VARCHAR(50) UNIQUE,
    address TEXT,
    age INTEGER CHECK (age >= 0),
    typeofmembership VARCHAR(50) NOT NULL DEFAULT 'Standard',
    dateofmembership DATE,
    status VARCHAR(20) NOT NULL DEFAULT 'Active' CHECK (
        status IN (
            'Active',
            'Suspended',
            'Inactive'
        )
    )
);

-- 4) Books
CREATE TABLE books (
    bookid INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title TEXT NOT NULL,
    authorid INTEGER NOT NULL REFERENCES authors (authorid) ON UPDATE CASCADE ON DELETE RESTRICT,
    genre VARCHAR(100),
    dateofpublication DATE,
    publisher VARCHAR(150),
    isbn VARCHAR(32) UNIQUE,
    language VARCHAR(50),
    availablecopies INTEGER NOT NULL DEFAULT 0 CHECK (availablecopies >= 0),
    agerating VARCHAR(16)
);

-- 5) LibraryStaff
CREATE TABLE librarystaff (
    staffid INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(150) NOT NULL,
    jobtitle VARCHAR(100),
    departmentid INTEGER REFERENCES departments (deptid) ON DELETE SET NULL ON UPDATE CASCADE,
    gender VARCHAR(30),
    address TEXT,
    phonenumber VARCHAR(50) UNIQUE,
    hiredate DATE,
    managerid INTEGER REFERENCES librarystaff (staffid) ON DELETE SET NULL,
    CONSTRAINT chk_manager_not_self CHECK (
        managerid IS NULL
        OR managerid <> staffid
    )
);

-- 6) BorrowHistory
CREATE TABLE borrowhistory (
    borrowhistoryid INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    bookid INTEGER NOT NULL REFERENCES books (bookid) ON UPDATE CASCADE ON DELETE RESTRICT,
    memberid INTEGER NOT NULL REFERENCES members (memberid) ON UPDATE CASCADE ON DELETE RESTRICT,
    borrowdate DATE NOT NULL,
    returndate DATE,
    CONSTRAINT chk_return_after_borrow CHECK (
        returndate IS NULL
        OR returndate >= borrowdate
    )
);

-- 7) BookOrders
CREATE TABLE bookorders (
    orderid INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    orderdate DATE NOT NULL,
    bookid INTEGER NOT NULL REFERENCES books (bookid) ON UPDATE CASCADE ON DELETE RESTRICT,
    cost NUMERIC(10, 2) NOT NULL CHECK (cost >= 0),
    quantity INTEGER NOT NULL CHECK (quantity > 0),
    supplydate DATE,
    fulfillmentstatus VARCHAR(20) NOT NULL DEFAULT 'Pending' CHECK (
        fulfillmentstatus IN (
            'Fulfilled',
            'Pending',
            'Processing',
            'Cancelled'
        )
    ),
    nameofsupplier VARCHAR(200)
);

-- Helpful indexes
CREATE INDEX idx_books_authorid ON books (authorid);

CREATE INDEX idx_librarystaff_deptid ON librarystaff (departmentid);

CREATE INDEX idx_borrowhistory_book ON borrowhistory (bookid);

CREATE INDEX idx_borrowhistory_member ON borrowhistory (memberid);